library(shiny)
install.packages("shiny")
library(shiny)
runExample("01_hello")
server <- function(input, output) {
output$distPlot <- renderPlot({
hist(rnorm(input$obs), col = 'darkgray', border = 'white')
})
}
ui <- fluidPage(
sidebarLayout(
sidebarPanel(
sliderInput("obs", "Number of observations:", min = 10, max = 500, value = 100)
),
mainPanel(plotOutput("distPlot"))
)
)
shinyApp(ui = ui, server = server)
source('~/.active-rstudio-document')
source('~/.active-rstudio-document', echo=TRUE)
library(rgl)
install.packages("rgl")
cars
cars$dist
mean(cars$dist)
?which
which(cars$dist == 85)
cars[50,]
?lag
ldeaths
class(ldeaths)
plot(ldeaths)
install.packages("dplyr")
library(dplyr)
mtcars
filter(mtcars, mpg>15)
filter(mtcars, mpg>20)
cars
plot(cars)
select(mtcars, mpg)
class(select(mtcars, mpg))
?select
starts_with
"hello" %>% print()
?"%>%"
?unlist
?"%>%"
cars %>% plot
`%<>%`
`%<>%<-`
.%>%.
.%>%print
(.%>%print)("hello")
"hello" %>% (.%>%print)
16 %>% sqrt -> x
x
?unlist
2015 - 1942
library(car)
install.packages("car")
library(car)
qqPlot(1:10)
qqPlot(rnorm(100))
qqPlot(rnorm(100))
qqPlot(rnorm(100))
qqPlot(rnorm(100))
?rt
qqPlot(rt(100, 5))
qqPlot(rt(100, 5))
qqPlot(rt(100, 5))
qqPlot(rt(100, 5))
?qqPlot
qqPlot(rt(100, 5))
qqPlot(rnorm(100))
qqPlot(rnorm(100))
qqPlot(rnorm(100))
qqPlot(rnorm(100))
qqPlot(rnorm(100))
qqPlot(rnorm(100))
qqPlot(rnorm(100), envelope=1-0.05/100)
qqPlot(rnorm(100), envelope=1-0.05/100)
qqPlot(rnorm(100), envelope=1-0.05/100)
qqPlot(rnorm(100), envelope=1-0.05/100)
qqPlot(rnorm(100), envelope=1-0.05/100)
qqPlot(rnorm(100), envelope=1-0.05/100)
qqPlot(rnorm(100), envelope=1-0.05/100)
qqPlot(rnorm(100), envelope=1-0.05/100)
qqPlot(rnorm(100), envelope=1-0.05/100)
qqPlot(rnorm(100), envelope=1-0.05/100)
qqPlot(rnorm(100), envelope=1-0.05/100)
qqPlot(rnorm(100), envelope=1-0.05/100)
qqPlot(rnorm(100), envelope=1-0.05/100)
qqPlot(rnorm(100), envelope=1-0.05/100)
qqPlot(rnorm(100), envelope=1-0.05/100)
qqPlot(rnorm(100), envelope=1-0.05/100)
qqPlot(rnorm(100), envelope=1-0.05/100)
qqPlot(rnorm(100), envelope=1-0.05/100)
qqPlot(rnorm(100), envelope=1-0.05/100)
qqPlot(rnorm(100), envelope=1-0.05/100)
qqPlot(rnorm(100), envelope=1-0.05/100)
qqPlot(rnorm(100), envelope=1-0.05/100)
qqPlot(rt(100, 10), envelope=1-0.05/100)
qqPlot(rt(100, 10), envelope=1-0.05/100)
qqPlot(rt(100, 10), envelope=1-0.05/100)
qqPlot(rt(100, 10), envelope=1-0.05/100)
qqPlot(rt(100, 10), envelope=1-0.05/100)
qqPlot(rt(100, 2), envelope=1-0.05/100)
qqPlot(rt(100, 2), envelope=1-0.05/100)
qqPlot(rt(100, 2), envelope=1-0.05/100)
qqPlot(rt(100, 2), envelope=1-0.05/100)
qqPlot(rt(100, 2), envelope=1-0.05/100)
qqPlot(rt(100, 3), envelope=1-0.05/100)
qqPlot(rt(100, 3), envelope=1-0.05/100)
qqPlot(rt(100, 3), envelope=1-0.05/100)
qqPlot(rt(100, 3), envelope=1-0.05/100)
qqPlot(rt(100, 3), envelope=1-0.05/100)
qqPlot(rt(100, 4), envelope=1-0.05/100)
qqPlot(rt(100, 4), envelope=1-0.05/100)
qqPlot(rt(100, 4), envelope=1-0.05/100)
qqPlot(rt(100, 4), envelope=1-0.05/100)
qqPlot(rt(100, 10), envelope=1-0.05/100)
qqPlot(rt(100, 10), envelope=1-0.05/100)
qqPlot(rt(100, 10), envelope=1-0.05/100)
qqPlot(rt(100, 10), envelope=1-0.05/100)
qqPlot(rt(100, 10), envelope=1-0.05/100)
qqPlot(rt(100, 10), envelope=1-0.05/100)
qqPlot(rt(100, 10), envelope=1-0.05/100)
qqPlot(rt(100, 10), envelope=1-0.05/100)
qqPlot(rt(100, 10), envelope=1-0.05/100)
qqPlot(rt(100, 10), envelope=1-0.05/100)
qqPlot(rt(100, 10), envelope=1-0.05/100)
qqPlot(rt(100, 10), envelope=1-0.05/100)
qqPlot(rt(100, 10), envelope=1-0.05/100)
qqPlot(rt(100, 10), envelope=1-0.05/100)
qqPlot(rt(1000, 10), envelope=1-0.05/1000)
qqPlot(rt(1000, 10), envelope=1-0.05/1000)
qqPlot(rt(1000, 10), envelope=1-0.05/1000)
qqPlot(rt(1000, 10), envelope=1-0.05/1000)
qqPlot(rt(1000, 10), envelope=1-0.05/1000)
qqPlot(rt(1000, 10), envelope=1-0.05/1000)
qqPlot(rt(1000, 10), envelope=1-0.05/1000)
qqPlot(rt(1000, 10), envelope=1-0.05/1000)
qqPlot(rnorm(1000), envelope=1-0.05/1000)
qqPlot(rnorm(1000), envelope=1-0.05/1000)
qqPlot(rnorm(1000), envelope=1-0.05/1000)
qqPlot(rnorm(1000), envelope=1-0.05/1000)
qqPlot(rnorm(1000), envelope=1-0.05/1000)
qqPlot(rnorm(1000), envelope=1-0.05/1000)
qqPlot(rnorm(1000), envelope=1-0.05/1000)
qqPlot(rnorm(1000), envelope=1-0.05/1000)
qqPlot(rnorm(20))
qqPlot(rnorm(20))
qqPlot(rnorm(20))
qqPlot(rnorm(20))
qqPlot(rnorm(20))
qqPlot(rnorm(20))
qqPlot(rnorm(20))
qqPlot(rnorm(20))
qqPlot(rnorm(20))
qqPlot(rnorm(20))
qqPlot(rnorm(20))
?qqPlot
x <- rnorm(100)
y <- rnorm(100)
mat <- cbind(x+y,x-y)
prcomp(mat)
plot(prcomp(mat))
x <- rnorm(100) * 10
y <- rnorm(100)
mat <- cbind(x+y,x-y)
prcomp(mat)
?prcomp
r <- prcomp(mat)
r$center
colMeans(mat)
r <- prcomp(mat, scale=F)
r <- prcomp(mat, center=T,scale.=F)
r
r$center
r$rotation$PC1
r$rotation[,"PC1"]
mat <- cbind(a=x+y,b=x-y)
mat
colnames(mat)
r <- prcomp(mat, center=T,scale.=F)
r
?abline
p <- prcomp(mat)
center <- p$center
vec <- p$rotation[,"PC1"]
center
mat[,1] <- mat[,1] + 20
p <- prcomp(mat)
center <- p$center
vec <- p$rotation[,"PC1"]
center
plot(mat[,1],mat[,2])
slope <- vec[2]/vec[1]
intercept <- center[2] - slope*center[1]
abline(intercept,slope)
setwd("~/Downloads")
dat <- read.csv("expmt_design.csv")
dat
colnames(dat)
dat$Index
?aggregate
aggregate(dat$Total_Reads_PF, list(Batch=dat$Batch), mean)
aggregate(dat$Total_Reads_PF, list(Batch=dat$Batch), sd)
aggregate(dat$Total_Reads_PF, list(Batch=dat$Batch), length())
aggregate(dat$Total_Reads_PF, list(Batch=dat$Batch), length)
aggregate(dat$Total_Reads_PF, list(Batch=dat$Gender), length)
nrow(dat)
plot(dat$Gender, dat$Total_Reads_PF)
plot(dat$Total_Reads_PF, dat$Gender)
plot(dat$Total_Reads_PF, dat$Batch)
library(vcd)
vcd
?mosaic
mosaic(~ Batch + Gender, data=dat)
colnames(dat)
mosaic(~ Batch + Gender + Treatment, data=dat)
mosaic(~ Batch + Treatment, data=dat)
aggregate(dat$Total_Reads_PF, list(dat$Gender), length)
aggregate(dat$Total_Reads_PF, list(Batch=dat$Batch, Gender=dat$Gender, Treatment=dat$Treatment), length)
aggregate(dat$Total_Reads_PF, list(Batch=dat$Batch, Gender=dat$Gender, Treatment=dat$Treatment), mean)
?aggregate
?xtabs
?table
table(dat$Batch, dat$Gender)
table(dat$Batch, dat$Gender, dat$Treatment)
table(dat$Batch, dat$Gender)
?tabulate
?table
class(table(dat$Batch, dat$Gender))
rownames(table(dat$Batch, dat$Gender))
table(dat$Batch, dat$Gender)[1,1]
table(dat$Batch, dat$Gender)[1,2]
plot(table(dat$Batch, dat$Gender))
?table
?xtabs
tapply(dat$Total_Reads_PF)
?tapply
tapply(dat$Total_Reads_PF, list(dat$Gender), mean)
tapply(dat$Total_Reads_PF, list(dat$Gender, dat$Batch), mean)
tapply(dat$Total_Reads_PF, list(dat$Gender, dat$Batch), length)
tapply(dat$Total_Reads_PF, list(dat$Gender, dat$Batch), mean)
tapply(dat$Total_Reads_PF, list(dat$Gender, dat$Batch, dat$Treatment), mean)
tapply(dat$Total_Reads_PF, list(dat$Gender), mean)
tapply(dat$Total_Reads_PF, list(dat$Gender), identity)
tapply(dat$Total_Reads_PF, dat$Gender, identity)
tapply(dat$Total_Reads_PF, dat$Gender, mean)
tapply(dat$Total_Reads_PF, dat$Gender, sd)
plot(tapply(dat$Total_Reads_PF, dat$Gender, sd))
melt(tapply(dat$Total_Reads_PF, dat$Gender, sd))
reshape::melt(tapply(dat$Total_Reads_PF, dat$Gender, sd))
reshape2::melt(tapply(dat$Total_Reads_PF, dat$Gender, sd))
aggregate
?aggregate
reshape2::melt(tapply(dat$Total_Reads_PF, list(Gender=dat$Gender), sd))
reshape2::melt(tapply(dat$Total_Reads_PF, list(Gender=dat$Gender), length))
reshape2::melt(table(Gender=dat$Gender))
plot(reshape2::melt(table(Gender=dat$Gender)))
foo <- reshape2::melt(table(Gender=dat$Gender))
str(foo)
summary(foo)
dat
?table
tapply(dat$Total_Reads_PF, dat$Gender, sd)
as.data.frame(tapply(dat$Total_Reads_PF, dat$Gender, sd))
tapply(dat$Total_Reads_PF, dat$Treatment, mean)
tapply(dat$Total_Reads_PF, dat$Treatment, length)
plot(dat$Total_Reads_PF, dat$Treatment)
density(dat$Total_Reads_PF)
plot(density(dat$Total_Reads_PF))
daply
library(plyr)
daply
?daply
daply(dat, Gender, mean)
daply(dat, dat$Gender, mean)
daply(dat, "Gender", mean)
daply(dat, "Gender", nrow)
daply(dat, "Gender","Treatment", nrow)
daply(dat, c("Gender","Treatment"), nrow)
daply(dat, ~ Gender + Treatment, nrow)
daply(dat, Total_Reads_PF ~ Gender + Treatment, nrow)
daply(dat, Total_Reads_PF ~ Gender + Treatment, mean)
daply(dat, ~ Gender + Treatment, mean)
?summarize
daply(dat, ~ Gender + Treatment, summarize, mean(Total_Reads_PF))
daply(dat, ~ Gender + Treatment, mean(Total_Reads_PF))
daply(dat, ~ Gender + Treatment, summarize, mean(Total_Reads_PF))
daply(dat, ~ Gender + Treatment, summarize, foo=mean(Total_Reads_PF))
daply(dat, ~ Gender + Treatment, summarize, foo=mean(Total_Reads_PF),bar=length(Total_Reads_PF))
?mutate
daply(dat, ~ Gender + Treatment, summarize, foo=mean(Total_Reads_PF),bar=nrow(.))
daply(dat, ~ Gender + Treatment, summarize, foo=mean(Total_Reads_PF),bar=nrow
)
daply(dat, ~ Gender + Treatment, summarize, foo=mean(Total_Reads_PF),bar=n())
daply(dat, ~ Gender + Treatment, summarize, foo=mean(Total_Reads_PF),bar=n
)
daply(dat, ~ Gender + Treatment, summarize, foo=mean(Total_Reads_PF),bar=n)
ddply(dat, ~ Gender + Treatment, summarize, foo=mean(Total_Reads_PF),bar=n)
ddply(dat, ~ Batch + Gender + Treatment, summarize, foo=mean(Total_Reads_PF),bar=n)
n
daply(dat, ~ Batch + Gender + Treatment, summarize, foo=mean(Total_Reads_PF),bar=n)
daply(dat, ~ Batch + Gender + Treatment, summarize, foo=mean(Total_Reads_PF),bar=length(Total_Reads_PF))
?n
daply(dat, ~ Batch + Gender + Treatment, summarise, foo=mean(Total_Reads_PF),bar=length(Total_Reads_PF))
daply(dat, ~ Batch + Gender + Treatment, summarise, foo=mean(Total_Reads_PF),bar=n())
library(dplyr)
daply(dat, ~ Batch + Gender + Treatment, summarise, foo=mean(Total_Reads_PF),bar=n())
?daply
daply(dat, ~ Batch + Gender + Treatment, summarise, foo=mean(Total_Reads_PF),bar=n(), .drop_i=F)
daply(dat, ~ Batch + Gender + Treatment, summarise, foo=mean(Total_Reads_PF),bar=n(), .drop_i=F,.drop_o=F)
daply(dat, ~ Gender + Treatment, summarise, foo=mean(Total_Reads_PF),bar=n(), .drop_i=F,.drop_o=F)
ddply(dat, ~ Gender + Treatment, summarise, foo=mean(Total_Reads_PF),bar=n(), .drop_i=F,.drop_o=F)
ddply(dat, ~ Batch + Gender + Treatment, summarise, foo=mean(Total_Reads_PF),bar=n(), .drop_i=F,.drop_o=F)
?ddply
ddply(dat, ~ Batch + Gender + Treatment, summarise, foo=mean(Total_Reads_PF),bar=n(), .drop=F)
?group_by
?groups
?ungroup
mtcars %>% group_by(cyl) %>% groups
mtcars %>% group_by(cyl) %>% summarize(n())
dat %>% group_by(Batch, Gender) %>% summarize(n())
dat %>% group_by(Batch, Gender) %>% summarize(n()) %>% ungroup
?summarize
?tapply
ddply(dat,~ Batch + Gender, summarize, n())
ddply(dat,~ Batch + Gender, summarize, n(), .drop=F)
?table
table(data$Batch, data$Gender)
table(dat$Batch, dat$Gender)
chisq.test(table(dat$Batch, dat$Gender))
fisher.test(table(dat$Batch, dat$Gender))
chisq.test(table(dat$Batch, dat$Gender))
setwd("~/git/2015-11-30-intro-r")
library(faraway)
data(diabetes)
?ozone
diabetes
View(diabetes)
?transmute
dat <- diabetes %>%
transmute(
subject = paste0("Subject",id),
glyhb = glyhb,
)
dat <- diabetes %>%
transmute(
subject = paste0("Subject",id),
glyhb = glyhb
)
head(dat)
dat
dat <- diabetes %>%
transmute(
subject = paste0("S",as.integer(id)),
glyhb = glyhb
)
dat
?diabetes
dat <- diabetes %>%
transmute(
subject = paste0("S",id),
glyhb = glyhb,
chol
)
colnames(dat)
dat <- diabetes %>%
transmute(
subject = paste0("S",id),
glyhb, chol, location, age, gender, height, weight
)
plot(dat)
head(dat)
dat <- diabetes %>%
transmute(
subject = factor(paste0("S",id)),
glyhb, chol, location, age, gender, height, weight
)
plot(dat)
?pairs
pairs(dat)
?pairs
pairs(dat, panel=plot)
?plot
?plot.default
pairs(dat, panel=plot, new=F)
pairs(dat)
pairs(weight ~ location, data=dat)
plot(weight ~ location, data=dat)
plot(age ~ location, data=dat)
plot(gender ~ location, data=dat)
diabetes$frame
dat <- diabetes %>%
transmute(
subject = factor(paste0("S",id)),
glyhb, chol, location, age, gender, height, weight, frame
)
plot(frame ~ location, data=dat)
str(dat)
plot(glyhb ~ chol, data=dat)
?seed
?set.seed()
set.seed(42)
dat1 <- dat %>%
select(-chol) %>%
filter(runif(n()) > 0.9)
dat2 <- dat %>%
select(subject, chol) %>%
filter(runif(n()) > 0.9)
nrow(dat1)
nrow(dat2)
set.seed(42)
dat1 <- dat %>%
select(-chol) %>%
filter(runif(n()) < 0.9)
dat2 <- dat %>%
select(subject, chol) %>%
filter(runif(n()) < 0.9)
nrow(dat1)
nrow(dat2)
match(dat1$subject, dat2$subject)
match(dat2$subject, dat1$subject)
?write.csv
write.csv(dat1, "data/diabetes.csv")
write.csv(dat2, "data/chol.csv")
write_csv
library(readr)
install.packages("reader","tidyr")
library(readr)
library(readr)
?write_csv
write_csv(dat1, "data/diabetes.csv")
write_csv(dat2, "data/chol.csv")
plot(diabetes[,c("bp.1s","bp.1d","bp.2s","bp.2d")])
t1
library(readr)
library(tidyr)
library(dplyr)
library(knitr)
library(rmarkdown)
library(lubridate)
install.packages("lubridate")
